"use strict";
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */
const capnp = require("capnp-ts");
const capnp_ts_1 = require("capnp-ts");
exports._capnpFileId = "b06e5cc550bd0e32";
var Value_Which;
(function (Value_Which) {
    Value_Which[Value_Which["VOID"] = 0] = "VOID";
    Value_Which[Value_Which["BOOL"] = 1] = "BOOL";
    Value_Which[Value_Which["INT8"] = 2] = "INT8";
    Value_Which[Value_Which["INT16"] = 3] = "INT16";
    Value_Which[Value_Which["INT32"] = 4] = "INT32";
    Value_Which[Value_Which["INT64"] = 5] = "INT64";
    Value_Which[Value_Which["UINT8"] = 6] = "UINT8";
    Value_Which[Value_Which["UINT16"] = 7] = "UINT16";
    Value_Which[Value_Which["UINT32"] = 8] = "UINT32";
    Value_Which[Value_Which["UINT64"] = 9] = "UINT64";
    Value_Which[Value_Which["FIXED_POINT"] = 10] = "FIXED_POINT";
    Value_Which[Value_Which["FLOAT32"] = 11] = "FLOAT32";
    Value_Which[Value_Which["FLOAT64"] = 12] = "FLOAT64";
    Value_Which[Value_Which["TEXT"] = 13] = "TEXT";
    Value_Which[Value_Which["DATA"] = 14] = "DATA";
    Value_Which[Value_Which["LIST"] = 15] = "LIST";
    Value_Which[Value_Which["ENUM"] = 16] = "ENUM";
    Value_Which[Value_Which["STRUCT"] = 17] = "STRUCT";
    Value_Which[Value_Which["ANY_POINTER"] = 18] = "ANY_POINTER";
})(Value_Which = exports.Value_Which || (exports.Value_Which = {}));
class Value extends capnp_ts_1.Struct {
    isVoid() { return capnp_ts_1.Struct.getUint16(0, this) === 0; }
    setVoid() { capnp_ts_1.Struct.setUint16(0, 0, this); }
    getBool() {
        capnp_ts_1.Struct.testWhich("bool", capnp_ts_1.Struct.getUint16(0, this), 1, this);
        return capnp_ts_1.Struct.getBit(16, this);
    }
    isBool() { return capnp_ts_1.Struct.getUint16(0, this) === 1; }
    setBool(value) {
        capnp_ts_1.Struct.setUint16(0, 1, this);
        capnp_ts_1.Struct.setBit(16, value, this);
    }
    getInt8() {
        capnp_ts_1.Struct.testWhich("int8", capnp_ts_1.Struct.getUint16(0, this), 2, this);
        return capnp_ts_1.Struct.getInt8(2, this);
    }
    isInt8() { return capnp_ts_1.Struct.getUint16(0, this) === 2; }
    setInt8(value) {
        capnp_ts_1.Struct.setUint16(0, 2, this);
        capnp_ts_1.Struct.setInt8(2, value, this);
    }
    getInt16() {
        capnp_ts_1.Struct.testWhich("int16", capnp_ts_1.Struct.getUint16(0, this), 3, this);
        return capnp_ts_1.Struct.getInt16(2, this);
    }
    isInt16() { return capnp_ts_1.Struct.getUint16(0, this) === 3; }
    setInt16(value) {
        capnp_ts_1.Struct.setUint16(0, 3, this);
        capnp_ts_1.Struct.setInt16(2, value, this);
    }
    getInt32() {
        capnp_ts_1.Struct.testWhich("int32", capnp_ts_1.Struct.getUint16(0, this), 4, this);
        return capnp_ts_1.Struct.getInt32(4, this);
    }
    isInt32() { return capnp_ts_1.Struct.getUint16(0, this) === 4; }
    setInt32(value) {
        capnp_ts_1.Struct.setUint16(0, 4, this);
        capnp_ts_1.Struct.setInt32(4, value, this);
    }
    getInt64() {
        capnp_ts_1.Struct.testWhich("int64", capnp_ts_1.Struct.getUint16(0, this), 5, this);
        return capnp_ts_1.Struct.getInt64(8, this);
    }
    isInt64() { return capnp_ts_1.Struct.getUint16(0, this) === 5; }
    setInt64(value) {
        capnp_ts_1.Struct.setUint16(0, 5, this);
        capnp_ts_1.Struct.setInt64(8, value, this);
    }
    getUint8() {
        capnp_ts_1.Struct.testWhich("uint8", capnp_ts_1.Struct.getUint16(0, this), 6, this);
        return capnp_ts_1.Struct.getUint8(2, this);
    }
    isUint8() { return capnp_ts_1.Struct.getUint16(0, this) === 6; }
    setUint8(value) {
        capnp_ts_1.Struct.setUint16(0, 6, this);
        capnp_ts_1.Struct.setUint8(2, value, this);
    }
    getUint16() {
        capnp_ts_1.Struct.testWhich("uint16", capnp_ts_1.Struct.getUint16(0, this), 7, this);
        return capnp_ts_1.Struct.getUint16(2, this);
    }
    isUint16() { return capnp_ts_1.Struct.getUint16(0, this) === 7; }
    setUint16(value) {
        capnp_ts_1.Struct.setUint16(0, 7, this);
        capnp_ts_1.Struct.setUint16(2, value, this);
    }
    getUint32() {
        capnp_ts_1.Struct.testWhich("uint32", capnp_ts_1.Struct.getUint16(0, this), 8, this);
        return capnp_ts_1.Struct.getUint32(4, this);
    }
    isUint32() { return capnp_ts_1.Struct.getUint16(0, this) === 8; }
    setUint32(value) {
        capnp_ts_1.Struct.setUint16(0, 8, this);
        capnp_ts_1.Struct.setUint32(4, value, this);
    }
    getUint64() {
        capnp_ts_1.Struct.testWhich("uint64", capnp_ts_1.Struct.getUint16(0, this), 9, this);
        return capnp_ts_1.Struct.getUint64(8, this);
    }
    isUint64() { return capnp_ts_1.Struct.getUint16(0, this) === 9; }
    setUint64(value) {
        capnp_ts_1.Struct.setUint16(0, 9, this);
        capnp_ts_1.Struct.setUint64(8, value, this);
    }
    getFixedPoint() {
        capnp_ts_1.Struct.testWhich("fixedPoint", capnp_ts_1.Struct.getUint16(0, this), 10, this);
        return capnp_ts_1.Struct.getText(0, this);
    }
    isFixedPoint() { return capnp_ts_1.Struct.getUint16(0, this) === 10; }
    setFixedPoint(value) {
        capnp_ts_1.Struct.setUint16(0, 10, this);
        capnp_ts_1.Struct.setText(0, value, this);
    }
    getFloat32() {
        capnp_ts_1.Struct.testWhich("float32", capnp_ts_1.Struct.getUint16(0, this), 11, this);
        return capnp_ts_1.Struct.getFloat32(4, this);
    }
    isFloat32() { return capnp_ts_1.Struct.getUint16(0, this) === 11; }
    setFloat32(value) {
        capnp_ts_1.Struct.setUint16(0, 11, this);
        capnp_ts_1.Struct.setFloat32(4, value, this);
    }
    getFloat64() {
        capnp_ts_1.Struct.testWhich("float64", capnp_ts_1.Struct.getUint16(0, this), 12, this);
        return capnp_ts_1.Struct.getFloat64(8, this);
    }
    isFloat64() { return capnp_ts_1.Struct.getUint16(0, this) === 12; }
    setFloat64(value) {
        capnp_ts_1.Struct.setUint16(0, 12, this);
        capnp_ts_1.Struct.setFloat64(8, value, this);
    }
    getText() {
        capnp_ts_1.Struct.testWhich("text", capnp_ts_1.Struct.getUint16(0, this), 13, this);
        return capnp_ts_1.Struct.getText(0, this);
    }
    isText() { return capnp_ts_1.Struct.getUint16(0, this) === 13; }
    setText(value) {
        capnp_ts_1.Struct.setUint16(0, 13, this);
        capnp_ts_1.Struct.setText(0, value, this);
    }
    adoptData(value) {
        capnp_ts_1.Struct.setUint16(0, 14, this);
        capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    disownData() { return capnp_ts_1.Struct.disown(this.getData()); }
    getData() {
        capnp_ts_1.Struct.testWhich("data", capnp_ts_1.Struct.getUint16(0, this), 14, this);
        return capnp_ts_1.Struct.getData(0, this);
    }
    hasData() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    initData(length) {
        capnp_ts_1.Struct.setUint16(0, 14, this);
        return capnp_ts_1.Struct.initData(0, length, this);
    }
    isData() { return capnp_ts_1.Struct.getUint16(0, this) === 14; }
    setData(value) {
        capnp_ts_1.Struct.setUint16(0, 14, this);
        capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    adoptList(value) {
        capnp_ts_1.Struct.setUint16(0, 15, this);
        capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    disownList() { return capnp_ts_1.Struct.disown(this.getList()); }
    getList() {
        capnp_ts_1.Struct.testWhich("list", capnp_ts_1.Struct.getUint16(0, this), 15, this);
        return capnp_ts_1.Struct.getPointer(0, this);
    }
    hasList() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    isList() { return capnp_ts_1.Struct.getUint16(0, this) === 15; }
    setList(value) {
        capnp_ts_1.Struct.setUint16(0, 15, this);
        capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    getEnum() {
        capnp_ts_1.Struct.testWhich("enum", capnp_ts_1.Struct.getUint16(0, this), 16, this);
        return capnp_ts_1.Struct.getUint16(2, this);
    }
    isEnum() { return capnp_ts_1.Struct.getUint16(0, this) === 16; }
    setEnum(value) {
        capnp_ts_1.Struct.setUint16(0, 16, this);
        capnp_ts_1.Struct.setUint16(2, value, this);
    }
    adoptStruct(value) {
        capnp_ts_1.Struct.setUint16(0, 17, this);
        capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    disownStruct() { return capnp_ts_1.Struct.disown(this.getStruct()); }
    getStruct() {
        capnp_ts_1.Struct.testWhich("struct", capnp_ts_1.Struct.getUint16(0, this), 17, this);
        return capnp_ts_1.Struct.getPointer(0, this);
    }
    hasStruct() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    isStruct() { return capnp_ts_1.Struct.getUint16(0, this) === 17; }
    setStruct(value) {
        capnp_ts_1.Struct.setUint16(0, 17, this);
        capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    adoptAnyPointer(value) {
        capnp_ts_1.Struct.setUint16(0, 18, this);
        capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    disownAnyPointer() { return capnp_ts_1.Struct.disown(this.getAnyPointer()); }
    getAnyPointer() {
        capnp_ts_1.Struct.testWhich("anyPointer", capnp_ts_1.Struct.getUint16(0, this), 18, this);
        return capnp_ts_1.Struct.getPointer(0, this);
    }
    hasAnyPointer() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    isAnyPointer() { return capnp_ts_1.Struct.getUint16(0, this) === 18; }
    setAnyPointer(value) {
        capnp_ts_1.Struct.setUint16(0, 18, this);
        capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this));
    }
    toString() { return "Value_" + super.toString(); }
    which() { return capnp_ts_1.Struct.getUint16(0, this); }
}
Value.VOID = Value_Which.VOID;
Value.BOOL = Value_Which.BOOL;
Value.INT8 = Value_Which.INT8;
Value.INT16 = Value_Which.INT16;
Value.INT32 = Value_Which.INT32;
Value.INT64 = Value_Which.INT64;
Value.UINT8 = Value_Which.UINT8;
Value.UINT16 = Value_Which.UINT16;
Value.UINT32 = Value_Which.UINT32;
Value.UINT64 = Value_Which.UINT64;
Value.FIXED_POINT = Value_Which.FIXED_POINT;
Value.FLOAT32 = Value_Which.FLOAT32;
Value.FLOAT64 = Value_Which.FLOAT64;
Value.TEXT = Value_Which.TEXT;
Value.DATA = Value_Which.DATA;
Value.LIST = Value_Which.LIST;
Value.ENUM = Value_Which.ENUM;
Value.STRUCT = Value_Which.STRUCT;
Value.ANY_POINTER = Value_Which.ANY_POINTER;
Value._capnp = { displayName: "Value", id: "eb2d33a1ada10a9b", size: new capnp_ts_1.ObjectSize(16, 1) };
exports.Value = Value;
class Map_Entry extends capnp_ts_1.Struct {
    adoptKey(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this)); }
    disownKey() { return capnp_ts_1.Struct.disown(this.getKey()); }
    getKey() { return capnp_ts_1.Struct.getPointer(0, this); }
    hasKey() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    setKey(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this)); }
    adoptValue(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(1, this)); }
    disownValue() { return capnp_ts_1.Struct.disown(this.getValue()); }
    getValue() { return capnp_ts_1.Struct.getPointer(1, this); }
    hasValue() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(1, this)); }
    setValue(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(1, this)); }
    toString() { return "Map_Entry_" + super.toString(); }
}
Map_Entry._capnp = { displayName: "Entry", id: "e243243ac908507f", size: new capnp_ts_1.ObjectSize(0, 2) };
exports.Map_Entry = Map_Entry;
class Map extends capnp_ts_1.Struct {
    adoptEntries(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this)); }
    disownEntries() { return capnp_ts_1.Struct.disown(this.getEntries()); }
    getEntries() { return capnp_ts_1.Struct.getList(0, Map._Entries, this); }
    hasEntries() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    initEntries(length) { return capnp_ts_1.Struct.initList(0, Map._Entries, length, this); }
    setEntries(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this)); }
    toString() { return "Map_" + super.toString(); }
}
Map.Entry = Map_Entry;
Map._capnp = { displayName: "Map", id: "e7e566cc912a6f7b", size: new capnp_ts_1.ObjectSize(0, 1) };
exports.Map = Map;
Map._Entries = capnp.CompositeList(Map_Entry);
